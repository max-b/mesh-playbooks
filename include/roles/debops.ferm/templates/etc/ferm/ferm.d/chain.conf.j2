{% set ferm_tpl_protocol = [] %}
{% if item.protocol is defined %}
{%   if item.protocol is string %}
{%     set _ = ferm_tpl_protocol.append(item.protocol) %}
{%   else %}
{%     for element in item.protocol %}
{%       set _ = ferm_tpl_protocol.append(element) %}
{%     endfor %}
{%   endif %}
{% elif item.protocols is defined %}
{%   if item.protocols is string %}
{%     set _ = ferm_tpl_protocol.append(item.protocols) %}
{%   else %}
{%     for element in item.protocols %}
{%       set _ = ferm_tpl_protocol.append(element) %}
{%     endfor %}
{%   endif %}
{% endif %}
{% set ferm_tpl_state = item.default_state | default('enabled') %}
{% if item.disabled is defined %}
{%   set ferm_tpl_state = 'enabled' %}
{%   if item.disabled is string %}
{%     if item.disabled | bool %}
{%       set ferm_tpl_state = 'disabled' %}
{%     endif %}
{%   else %}
{%     if item.disabled %}
{%       set ferm_tpl_state = 'disabled' %}
{%     endif %}
{%   endif %}
{% elif item.enabled is defined %}
{%   set ferm_tpl_state = 'disabled' %}
{%   if item.enabled is string %}
{%     if item.enabled | bool %}
{%       set ferm_tpl_state = 'enabled' %}
{%     endif %}
{%   else %}
{%     if item.enabled %}
{%       set ferm_tpl_state = 'enabled' %}
{%     endif %}
{%   endif %}
{% else %}
{%   set ferm_tpl_state = 'enabled' %}
{% endif %}
# This file is managed by Ansible, all changes will be lost

# Accept new connections from specified IP addresses{% if item.dport|d() %} on {{ item.dport | join(',') }} port{% endif %}
{#

List of parameters:

Required:
  item.chain         name of the chain to create

Optional:
  item.table         specify which table to add rules into
  item.dport         list of destination ports to configure
  item.protocol(s)   list of protocols to configure (tcp, udp)
  item.saddr         list of source addresses to accept
  item.interface     list of name of an interface via which a packet was received
  item.outerface     list of name of an interface via which a packet is going to be sent
  item.accept_any    accept connections from any IP address if True
  item.disabled      if True, disable the rule (can be used to toggle rule via variable)
  item.enabled       if True, enable the rule (can be used to toggle rule via variable)
  item.include       include custom file or command output
  item.jump          jump tp specified chain

#}

{% if ferm_tpl_state == 'enabled' %}
domain $domains table {{ item.table | default('filter') }} chain "{{ item.chain }}"{% if ferm_tpl_protocol or item.dport|d() %} protocol ({{ (ferm_tpl_protocol if ferm_tpl_protocol else ['tcp']) | join(' ') }}){% endif %}{% if item.dport|d() %} dport ({{ item.dport | join(' ') }}){% endif %} {
{% if item.saddr is defined and item.saddr %}
    @def $ITEMS = ( @ipfilter( ({{ item.saddr | unique | join(" ") }}) ) );
    @if @ne($ITEMS,"") {
        saddr $ITEMS
{% if item.interface|d() and item.interface is string %}
        interface {{ item.interface }}
{% elif item.interface|d() and item.interface is iterable %}
        interface ({{ item.interface | unique | join(' ') }})
{% endif %}
{% if item.outerface|d() and item.outerface is string %}
        outerface {{ item.outerface }}
{% elif item.outerface|d() and item.outerface is iterable %}
        outerface ({{ item.outerface | unique | join(' ') }})
{% endif %}
        ACCEPT;
    }
{% else %}
{% if item.accept_any is defined and item.accept_any | bool %}
    ACCEPT;
{% elif item.include is defined and item.include %}
    @include "{{ item.include }}";
{% elif item.jump is defined and item.jump %}
    jump "{{ item.jump }}";
{% else %}
    # Connections from any IP address not allowed
{% endif %}
{% endif %}
}
{% else %}
# chain rule has been disabled by a variable
{% endif %}

